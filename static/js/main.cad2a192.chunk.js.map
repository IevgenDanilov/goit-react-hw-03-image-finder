{"version":3,"sources":["shared/services/postsGallery.js","components/loader/Loader.jsx","components/errorNotification/ErrorNotification.jsx","components/searchbar/Searchbar.jsx","components/imageGallery/ImageGallery.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/button/Button.jsx","components/modal/Modal.jsx","App.js","index.js"],"names":["fetchImages","query","page","axios","get","baseUrl","propTypes","PropTypes","string","isRequired","number","LoaderComponent","type","color","height","width","Component","ErrorNotification","text","className","Searchbar","state","inputValue","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onSubmit","this","onChange","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","images","onOpenModal","map","id","webformatURL","largeImageURL","onClick","src","alt","data-largelink","Button","Modal","closeModal","key","onClose","window","addEventListener","removeEventListener","App","isLoading","isModal","error","getDataImages","then","imagesDataArr","data","hits","image","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","onButtonClick","onCloseModal","length","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cad2a192.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst baseUrl = \"https://pixabay.com/api/?q=\";\r\nconst pageUrl = \"&page=\";\r\nconst keyUrl = \"&key=23381165-23963a51c09328db6c17876e7\";\r\nconst optionsUrl = \"&image_type=photo&orientation=horizontal&per_page=12\";\r\n\r\nexport const fetchImages = (query, page) => {\r\n  return axios.get(baseUrl + query + pageUrl + page + keyUrl + optionsUrl);\r\n};\r\n\r\nfetchImages.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class LoaderComponent extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorNotification = ({ text }) => (\r\n  <h1 className=\"Error\">Whoops, something went wrong: {text}</h1>\r\n);\r\n\r\nexport default ErrorNotification;\r\n\r\nErrorNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n","// import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ inputValue: target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    const { handleChange, handleSubmit } = this;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ images, query, onOpenModal }) => {\r\n  return images.map(({ id, webformatURL, largeImageURL }) => (\r\n    <li\r\n      key={id}\r\n      onClick={() => onOpenModal(largeImageURL)}\r\n      className=\"ImageGalleryItem\"\r\n    >\r\n      <img\r\n        src={webformatURL}\r\n        alt={query}\r\n        data-largelink={largeImageURL}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  onOpenModal: PropTypes.func.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className=\"Button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModal);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModal);\r\n  }\r\n\r\n  closeModal = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { onClose, children } = this.props;\r\n    return (\r\n      <div className=\"Overlay\" onClick={onClose}>\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { fetchImages } from \"./shared/services/postsGallery\";\nimport LoaderComponent from \"./components/loader/Loader.jsx\";\nimport ErrorNotification from \"./components/errorNotification/ErrorNotification.jsx\";\nimport Searchbar from \"./components/searchbar/Searchbar.jsx\";\nimport ImageGallery from \"./components/imageGallery/ImageGallery.jsx\";\nimport ImageGalleryItem from \"./components/imageGalleryItem/ImageGalleryItem.jsx\";\nimport Button from \"./components/button/Button.jsx\";\nimport Modal from \"./components/modal/Modal.jsx\";\nimport \"./Styles.css\";\n\nclass App extends Component {\n  // Оголошуємо стани\n  state = {\n    images: [],\n    isLoading: false,\n    isModal: false,\n    error: null,\n    query: \"\",\n    page: 1,\n    largeImageURL: \"\",\n  };\n\n  // Функція передачі введеного запиту в значення стану\n\n  handleSubmit = (inputValue) => {\n    this.setState({ isLoading: true, query: inputValue, images: [], page: 1 });\n  };\n\n  // Функція відправки запиту на сервер і отримання даних\n\n  getDataImages = (query, page) => {\n    fetchImages(query, page)\n      .then(({ data }) => {\n        const imagesDataArr = data.hits.map((image) => {\n          const { id, webformatURL, largeImageURL } = image;\n          return { id, webformatURL, largeImageURL };\n        });\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...imagesDataArr],\n          page: prevState.page + 1,\n          isLoading: false,\n          error: null,\n        }));\n      })\n      .then(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((error) => this.setState({ error, isLoading: false }));\n  };\n\n  // Завантаження даних з сервера\n\n  componentDidUpdate() {\n    const { query, page, isLoading } = this.state;\n    if (isLoading) {\n      this.getDataImages(query, page);\n    }\n  }\n\n  onButtonClick = () => {\n    this.setState({ isLoading: true });\n  };\n\n  onOpenModal = (image) => {\n    this.setState({ largeImageURL: image, isModal: true });\n  };\n  onCloseModal = (e) => {\n    if (e && e.target.className !== \"Overlay\") {\n      return null;\n    }\n    this.setState({ isModal: false });\n  };\n\n  render() {\n    const { error, isLoading, images, query, largeImageURL, isModal } =\n      this.state;\n    const { handleSubmit, onButtonClick, onOpenModal, onCloseModal } = this;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={handleSubmit} />\n        {images.length > 0 && (\n          <ImageGallery>\n            {images.length > 0 && (\n              <ImageGalleryItem\n                images={images}\n                query={query}\n                onOpenModal={onOpenModal}\n              />\n            )}\n          </ImageGallery>\n        )}\n        {isModal && (\n          <Modal onClose={onCloseModal}>\n            <img src={largeImageURL} alt={query} />\n          </Modal>\n        )}\n        {error && <ErrorNotification text={error.message} />}\n        {isLoading && <LoaderComponent />}\n        {images.length > 0 && <Button onClick={onButtonClick} />}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}